# Write a CSV file containing origAddress to the working directory
write_excel_csv(origAddress, "geocoded4.csv")
mapAddress<- get_map(location='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=origAddress, aes(x=lon, y=lat))
install.packages("xlsx")
geocoded_stores <- read.csv(file= "Github/711Map/complete_data.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
View(geocoded_stores)
geocoded_stores <- read.csv(file= "Github/711Map/geocoded_stores.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
View(geocoded_stores)
mapAddress<- get_map(location='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
ggmap::register_google(key = 'KEY')
library(readr)
mapAddress<- get_map(location='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
ggmap::register_google(key = 'KEY')
library(readr)
library(ggmap)
library(readr)
# Put in Google API KEY
ggmap::register_google(key = 'KEY')
mapAddress<- get_map(location='Taiwan', zoom=8)
mapAddress<- get_map(center='Taiwan', zoom=8)
mapAddress<- get_map(center='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
mapAddress<- get_map(center='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
ggmap::register_google(key = 'AIzaSyAbypWUq7Gvil3tKWusGGRlXfrh8AHAyz0')
mapAddress<- get_map(location='Taiwan', zoom=8)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
# Plot map data
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
# Plot map data
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
devtools::install_github("dr-harper/ggmapstyles")
library(devtools)
devtools::install_github("dr-harper/ggmapstyles")
# Load packages
library(ggmap)
library(devtools)
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
library(devtools)
library(usethis)
library(devtools)
library(usethis)
install.packages("rlang")
library(rlang)
library(usethis)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("devtools")
library(devtools)
devtools::install_github("dr-harper/ggmapstyles")
install.packages("rlang")
library(rlang)
library(devtools)
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
library(usethis)
library(devtools)
install.packages("cli")
install.packages("cli")
library(cli)
library(ggmap)
library(rlang)
library(cli)
library(usethis)
library(devtools)
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
library(devtools)
remove.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
library(devtools)
library(usethis)
library(devtools)
devtools::install_github("dr-harper/ggmapstyles")
library(ggmap)
library(rlang)
library(cli)
library(usethis)
library(devtools)
library(ggmapstyles)
library(readr)
devtools::install_github("dr-harper/ggmapstyles")
devtools::install_github("dr-harper/ggmapstyles")
devtools::install_github("dr-harper/ggmapstyles")
library(Rtools)
devtools::install_github("dr-harper/ggmapstyles")
force=TRUE
library(cli)
devtools::install_github("dr-harper/ggmapstyles")
devtools::install_github("dr-harper/ggmapstyles", force=TRUE)
library(ggmapstyles)
install.packages(ggmapstyles)
install.packages(ggmapstyles)
install.package(ggmapstyles)
install.packages("ggmapstyles")
install.packages("ggmapstyles")
library(ggmapstyles)
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
# Plot map data
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
library(ggmap)
# Put in your Google API KEY
ggmap::register_google(key = 'AIzaSyAbypWUq7Gvil3tKWusGGRlXfrh8AHAyz0')
geocoded_stores <- read.csv(file= "Github/711Map/geocoded_stores.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
# Plot map data
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
# Load packages
library(ggmap)
library(rlang)
library(cli)
library(usethis)
library(devtools)
library(ggmapstyles)
library(readr)
ggmap::register_google(key = 'AIzaSyAbypWUq7Gvil3tKWusGGRlXfrh8AHAyz0')
geocoded_stores <- read.csv(file= "Github/711Map/geocoded_stores.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/8097/wy")
# Plot map data
ggmap(mapAddress) + geom_point(data=geocoded_stores, aes(x=lon, y=lat))
ggmap(mapAddress)
mapAddress<- get_snazzymap(location='Taiwan', zoom=8, mapRef="https://snazzymaps.com/style/13/neutral-blue")
# Plot map data
ggmap(mapAddress)
mapAddress<- get_map(location='Taiwan', source= "osm", color="bw", zoom=8, mapRef="https://snazzymaps.com/style/13/neutral-blue")
mapAddress<- get_map(location='Taiwan', source= "osm", color="bw", zoom=8, mapRef="https://snazzymaps.com/style/13/neutral-blue")
# Plot map data
ggmap(mapAddress)
map_stores<- get_map(location='Taiwan', source= "osm", color="bw", zoom=8, mapRef="https://snazzymaps.com/style/13/neutral-blue")
ggmap(map_stores)
ggmap(map_stores)
map_stores<- get_map(location='Taiwan', source= "osm", color="bw", zoom=8)
ggmap(map_stores)
map_stores<- get_map(location='Taiwan', source= "osm", color="bw", zoom=8)
geocoded_stores <- read.csv(file= "Github/711Map/geocoded_stores.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
basemap <- get_snazzymap("Southampton, UK", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
library(ggmapstyles)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
basemap2 <- get_map(location="Taiwan", zoom=9,source = "google", maptype = "satellite")
ggmap(basemap2)
basemap2 <- get_map(location="Taiwan", zoom=8.5,source = "google", maptype = "satellite")
basemap2 <- get_map(location="Taiwan", zoom=8,source = "google", maptype = "satellite")
ggmap(basemap2)
basemap2 <- get_map(location="Taiwan", zoom=7,source = "google", maptype = "satellite")
ggmap(basemap2)
basemap2 <- get_map(location="Taiwan", zoom=8,source = "google", maptype = "satellite")
ggmap(basemap2)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
library(ggmapstyles)
library(ggmap)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
install.packages("rjson")
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
library(rjson)
basemap <- get_snazzymap("Taiwan", mapRef = "https://snazzymaps.com/style/83/muted-blue")
ggmap(basemap)
library(sf)
library(ggplot2)
library(tmap)
library(tmaptools)
library(leaflet)
library(dplyr)
basemap <- st_read("Github/711Map/TWBoundary/TWN_adm0.shp", stringAsFactors=F)
basemap <- st_read("Github/711Map/TWCityTownship/TOWN_MOI_1100415.shp", stringAsFactors=F)
basemap <- st_read("Github/711Map/TWCityTownship/CityTownship.shp", stringAsFactors=F)
library(sf)
library(ggplot2)
library(tmap)
library(tmaptools)
library(leaflet)
library(dplyr)
# Put in your Google API KEY
ggmap::register_google(key = 'AIzaSyAbypWUq7Gvil3tKWusGGRlXfrh8AHAyz0')
geocoded_stores <- read.csv(file= "Github/711Map/geocoded_stores.csv", encoding= "UTF-8", stringsAsFactors = FALSE)
View(geocoded_stores)
toGeoJSON(data= geocoded_stores, name="geocoded_storesGeoJSON", dest="Github/711Map/", lat.lon=c(6,5))
install.packages("geojsonio")
options(scipen=999)
basemap <- st_read("Github/711Map/TWCityTownship/CityTownship.shp", stringAsFactors=F)
basemap <- st_read("Github/711Map/TWCityTownship/CityTownship2.shp", stringAsFactors=F)
st_read()
setwd()
setwd()
getwd()
read.csv(OcularSampling_OpportunisticAndRandom)
read.csv("OcularSampling_OpportunisticAndRandom")
read.csv("OcularSampling_OpportunisticAndRandom.csv")
df1<- read.csv("OcularSampling_OpportunisticAndRandom.csv")
View(df1)
df2 <- filter(df1,  F_RO= "0")
df2 <- filter(df1,  F_RO= "0",)
df2 <- filter(df1,  F_RO != "0")
library(dplyr)
df1<- read.csv("OcularSampling_OpportunisticAndRandom.csv")
df1 <- filter(df1,  F_RO != "0")
View(df1)
getwd()
setwd("C:/Users/amyli/Documents/Github")
setwd("C:/Users/amyli/Documents/Github/711Map")
read.csv("geocoded_stores.csv")
View(geocoded_stores)
boxplot(x, main="Boxplot")
x<- read.csv("geocoded_stores.csv")
boxplot(x, main="Boxplot")
boxplot(x,[,c("lon", "lat")])
boxplot(x[,c("lon", "lat")])
boxplot(x[,c("lon")])
boxplot(x[,c("lon")])
boxplot(x[,c("lat")])
boxplot(x[,c("lat")])
boxplot(x[,c("lon")])
